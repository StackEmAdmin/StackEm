#root {
  --cell-size: 1.75rem;
}

.game-container {
  --border-width: 2px;
  --gap: 0rem;
  --garbage-width: 0.9rem;
  --cell-border-width: 3px;
  --o: #f2d74c;
  --i: #65dbc8;
  --l: #eda93f;
  --j: #3358dd;
  --s: #7acd44;
  --t: #c132d0;
  --z: #d83a28;
  --g: #e6e6e6;
  --ghost: #434343;

  position: relative;
  height: calc(26 * var(--cell-size));

  display: grid;
  grid-template-columns: auto auto auto;
  grid-template-rows: auto auto auto;
  grid-template-areas:
    'hold board next'
    'stats board next'
    'stats board more-stat';
  align-content: end;

  gap: var(--gap);

  user-select: none;
}

.game-container .board-top {
  box-sizing: content-box;
  width: calc(10 * var(--cell-size));

  position: absolute;
  /* Left: hold width + gap + garbage + hold border + board left border */
  left: round(
    nearest,
    calc(
      6 * var(--cell-size) + var(--gap) + var(--garbage-width) + 2 *
        var(--border-width)
    ),
    0.5px
  );
  bottom: calc(20 * var(--cell-size) + var(--border-width) - 1px);

  display: grid;
  grid-template-columns: repeat(10, var(--cell-size));
}

.game-container .garbage {
  position: absolute;
  /* Left: hold width + border */
  left: calc(6 * var(--cell-size) + 1 * var(--border-width) + var(--gap));
  bottom: 0;
  width: var(--garbage-width);

  border-bottom-left-radius: var(--border-radius);
  overflow: hidden;

  display: grid;
  justify-items: end;
}

.game-container .garbage::after {
  position: absolute;
  z-index: 1;

  content: '';
  bottom: 0;
  left: 0;
  width: 100%;
  height: calc(20 * var(--cell-size) - 1px);
  border-left: var(--border-width) solid var(--text-color);
  border-bottom: var(--border-width) solid var(--text-color);
  border-bottom-left-radius: var(--border-radius);
}

.game-container .garbage .garbage-cell {
  height: var(--cell-size);
  width: calc(var(--garbage-width) - var(--border-width));
}

.game-container .garbage .garbage-cell.uncharged {
  background-color: #f2d74c;
}

.game-container .garbage .garbage-cell.charged {
  background-color: #65dbc8;
}

.game-container .hold {
  box-sizing: content-box;
  width: calc(4 * var(--cell-size));
  height: calc(2 * var(--cell-size));

  grid-area: hold;
  padding: var(--cell-size);
  margin-right: var(--garbage-width);

  display: grid;
  grid-template-rows: repeat(2, var(--cell-size));
  grid-template-columns: repeat(4, var(--cell-size));

  border: var(--border-width) solid var(--text-color);
  border-right: none;
  border-bottom-left-radius: var(--border-radius);
  border-top-left-radius: var(--border-radius);
}

.game-container .board {
  box-sizing: content-box;
  width: calc(10 * var(--cell-size));
  height: calc(20 * var(--cell-size) - 1px);

  grid-area: board;

  display: grid;
  grid-template-columns: repeat(10, var(--cell-size));
  grid-template-rows: repeat(20, var(--cell-size));

  border: var(--border-width) solid var(--text-color);
  border-top: none;
  border-bottom-right-radius: var(--border-radius);

  overflow: hidden;
}

.game-container .next {
  box-sizing: content-box;
  width: calc(4 * var(--cell-size));
  height: calc(14 * var(--cell-size));

  grid-area: next;
  padding: var(--cell-size);

  display: grid;
  grid-template-columns: repeat(4, var(--cell-size));
  grid-template-rows: repeat(14, var(--cell-size));

  border: var(--border-width) solid var(--text-color);
  border-left: none;
  border-bottom-right-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
}

.game-container .stats {
  grid-area: stats;

  display: flex;
  flex-direction: column;
  justify-content: center;
  /* align-items: center; */
  gap: 1rem;
}

.game-container .more-stat {
  grid-area: more-stat;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.game-container .cell {
  position: relative;
  width: var(--cell-size);
  height: var(--cell-size);
}

.game-container .cell .corner {
  position: absolute;
  width: var(--cell-size);
  height: var(--cell-size);
}

.game-container .cell.tl-corner .corner {
  top: 0;
  left: 0;
}

.game-container .cell.tr-corner .corner {
  top: 0;
  right: 0;
}

.game-container .cell.bl-corner .corner {
  bottom: 0;
  left: 0;
}

.game-container .cell.br-corner .corner {
  bottom: 0;
  right: 0;
}

.game-container .board .cell {
  border: 0.1px solid #77777733;
}

.game-container .cell.ghost {
  background-color: var(--ghost);
  border: none;
}

.game-container .cell.o {
  background-color: var(--o);
  border: none;
}

.game-container .cell.i {
  background-color: var(--i);
  border: none;
}

.game-container .cell.l {
  background-color: var(--l);
  border: none;
}

.game-container .cell.j {
  background-color: var(--j);
  border: none;
}

.game-container .cell.s {
  background-color: var(--s);
  border: none;
}

.game-container .cell.t {
  background-color: var(--t);
  border: none;
}

.game-container .cell.z {
  background-color: var(--z);
  border: none;
}

.game-container .cell.g {
  background-color: var(--g);
  border: none;
}

.game-container .cell.hg {
  border: var(--cell-border-width) solid var(--g);
}

.game-container .cell.ho {
  border: var(--cell-border-width) solid var(--o);
}

.game-container .cell.hi {
  border: var(--cell-border-width) solid var(--i);
}

.game-container .cell.hl {
  border: var(--cell-border-width) solid var(--l);
}

.game-container .cell.hj {
  border: var(--cell-border-width) solid var(--j);
}

.game-container .cell.hs {
  border: var(--cell-border-width) solid var(--s);
}

.game-container .cell.ht {
  border: var(--cell-border-width) solid var(--t);
}

.game-container .cell.hz {
  border: var(--cell-border-width) solid var(--z);
}

.game-container .cell.no-border-top {
  border-top: none;
}

.game-container .cell.no-border-bottom {
  border-bottom: none;
}

.game-container .cell.no-border-left {
  border-left: none;
}

.game-container .cell.no-border-right {
  border-right: none;
}

/* Firefox style */
.ff.game-container .board-top {
  left: calc(
    6 * var(--cell-size) + var(--gap) + var(--garbage-width) + 2 *
      var(--border-width)
  );

  bottom: calc(20 * var(--cell-size) + var(--border-width));
}

.ff.game-container .board {
  height: calc(20 * var(--cell-size));
}

.ff.game-container .garbage::after {
  height: calc(20 * var(--cell-size));
}

@media screen and (min-width: 768px) {
  .game-container {
    height: auto;
    align-content: normal;
  }
}
